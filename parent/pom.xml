<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.2.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>com.demo.scs.poc</groupId>
    <artifactId>parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>SCS PoC :: Parent POM</name>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--<docker.image.registry>nexus3.twix.complus:8100/</docker.image.registry>-->
        <docker.image.registry>klauss42/</docker.image.registry>
        <docker.image.prefix>scs-poc-</docker.image.prefix>
        <docker.host>tcp://localhost:2375</docker.host>
        <docker.enable.filebeat>false</docker.enable.filebeat>

        <spring.cloud.version>Camden.SR1</spring.cloud.version>
        <spring-boot-admin.version>1.4.3</spring-boot-admin.version>
        <metrics.version>3.1.2</metrics.version>
        <jsonpath.version>2.2.0</jsonpath.version>

        <!--<thymeleaf.version>3.0.2.RELEASE</thymeleaf.version>-->
        <!--<thymeleaf-layout-dialect.version>2.0.0</thymeleaf-layout-dialect.version>-->
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.demo.scs.poc</groupId>
                <artifactId>metrics-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.demo.scs.poc</groupId>
                <artifactId>usercontext-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.demo.scs.poc</groupId>
                <artifactId>nav-fallback</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.demo.scs.poc</groupId>
                <artifactId>beats-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.demo.scs.poc</groupId>
                <artifactId>common-consul</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.demo.scs.poc</groupId>
                <artifactId>common-ps-signal</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.demo.scs.poc</groupId>
                <artifactId>common-test</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>


            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <!-- avoid override of webjars by org.springframework.cloud:spring-cloud-netflix-dependencies:1.2.1.RELEASE -->
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>bootstrap</artifactId>
                <version>2.2.1</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>1.8.2</version>
            </dependency>
            <dependency>
                <groupId>org.thymeleaf.extras</groupId>
                <artifactId>thymeleaf-extras-springsecurity3</artifactId>
                <version>3.0.1.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>com.ryantenney.metrics</groupId>
                <artifactId>metrics-spring</artifactId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <artifactId>metrics-graphite</artifactId>
                <groupId>io.dropwizard.metrics</groupId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jvm</artifactId>
                <version>${metrics.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>1.3</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>2.0.2-beta</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${jsonpath.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path-assert</artifactId>
                <version>${jsonpath.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>2.7.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.10</version>
                    <executions>
                        <execution>
                            <id>parse-version</id>
                            <goals>
                                <goal>parse-version</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.17.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.fabric8</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <configuration>
                                <logDate>default</logDate>
                                <autoPull>true</autoPull>
                                <!--<dockerHost>${docker.host}</dockerHost>-->
                                <verbose>true</verbose>
                                <useColor>true</useColor>
                                <images>
                                    <image>
                                        <!-- Alias name which can used for linking containers during runtime -->
                                        <alias>${project.artifactId}</alias>
                                        <name>
                                            ${docker.image.registry}${docker.image.prefix}${project.artifactId}:${project.version}
                                        </name>
                                        <build>
                                            <tags>
                                                <tag>latest</tag>
                                                <tag>${project.version}</tag>
                                            </tags>
                                            <cleanup>false</cleanup>
                                            <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                                            <args>
                                                <ARTIFACT_ID>${project.artifactId}</ARTIFACT_ID>
                                                <ENABLE_FILEBEAT>${docker.enable.filebeat}</ENABLE_FILEBEAT>
                                            </args>
                                            <assembly>
                                                <inline>
                                                    <id>${project.artifactId}</id>
                                                    <dependencySets>
                                                        <dependencySet>
                                                            <includes>
                                                                <include>${project.groupId}:${project.artifactId}
                                                                </include>
                                                            </includes>
                                                            <outputDirectory>.</outputDirectory>
                                                            <outputFileNameMapping>${project.artifactId}.jar
                                                            </outputFileNameMapping>
                                                        </dependencySet>
                                                    </dependencySets>
                                                </inline>
                                            </assembly>
                                        </build>
                                    </image>
                                </images>
                            </configuration>

                            <!-- Hooking into the lifecycle -->
                            <executions>
                                <execution>
                                    <id>build</id>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                    <phase>package</phase>
                                    <!--<phase>install</phase>-->
                                </execution>
                                <execution>
                                    <id>push-deploy</id>
                                    <goals>
                                        <goal>push</goal>
                                    </goals>
                                    <phase>install</phase>
                                    <!-- As long as we don't have a Nexus to deploy the Maven artifacts to,
                                        we bind 'push' to install phase-->
                                    <!--<phase>deploy</phase>-->
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <!-- special profiles to make setting the docker.host easier -->
        <profile>
            <id>socket</id>
            <properties>
                <docker.host>unix:///var/run/docker.sock</docker.host>
            </properties>
        </profile>
        <profile>
            <id>sonar</id>
            <properties>
                <!--<sonar.host.url>http://${docker.host.name}:9000</sonar.host.url>-->
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
